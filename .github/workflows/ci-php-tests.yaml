on:
  workflow_call:
    inputs:
      php-versions:
        type: string
        description: The space sparated list of PHP versions to use for the tests.
        default: "8.0 7.4"
        required: false

jobs:
  prepare-matrix:
    name: Prepare build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-outputs.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          coverage: none

      - name: Generate build matrix
        id: matrix
        run: |
          echo "::set-output name=output::$(php .github/scripts/build-matrix.php)"

      - name: Set build matrix
        id: set-outputs
        run: |
          echo '::set-output name=matrix::${{ steps.matrix.outputs.output }}'

  test:
    name: PHPUnit
    needs: prepare-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.version }}
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
          echo "::add-matcher::.github/problem-matchers/coverage-check.json"

      - name: Install dependencies
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

      - name: Run phpunit
        run: vendor/bin/phpunit --testsuite ${{ matrix.suit }} --coverage-clover=coverage.xml

#      - name: Check coverage.xml existence
#        id: check-coverage-file
#        uses: andstor/file-existence-action@v1
#        with:
#          files: coverage.xml
#
#      - name: Run coverage-check
#        if: ${{ always() && steps.check-coverage-file.outputs.files_exists == 'true' }}
#        run: vendor/bin/coverage-check coverage.xml 100
#
#      - name: Upload coverage as artifacts
#        if: ${{ always() && steps.check-coverage-file.outputs.files_exists == 'true' }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: coverage-${{ matrix.php-version }}
#          path: coverage.xml
#
#      - name: Upload coverage to Codecov
#        if: ${{ always() && steps.check-coverage-file.outputs.files_exists == 'true' }}
#        uses: codecov/codecov-action@v1
#        with:
#          name: coverage-${{ matrix.php-version }}
#          file: coverage.xml
